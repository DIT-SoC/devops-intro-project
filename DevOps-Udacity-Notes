# Missing notes from the first hapf of this
# Picks up from Lesson 02 - Section 11
# The Image is already built, errors encountered

###############################
# The Purpose of Devops
###############################
The end goal of DevOps is to save time

Where did DevOps come from?

What problems is it trying to solve?

Who are the DevOps people, Dev vs Ops

Tools for workflows, deployment, automation and monitoring

Measureing the benefit of practical DevOps

###############################
# Building the Image
###############################

From the terminal, run the following command, replacing <account-name> with your GitHub username:

git clone http://github.com/<account-name>/devops-intro-project devops
This will give you a directory named devops.

You will find the packer-templates directory in devops

The application-server.json file has will return errors when run
The source URL no longer exists. Should be updated with a valid link
The checksum will also fail as a result. The checksum will need to be updated to match the new iso URL

What is the path for the post-processor final artifact in the json file?
What is the file type/extension of the final artifact?

###############################
# Use the image locally
###############################
What is Vagrant
  -Connect to deveopment environments
  -Check VBox directory were artifact is stored
 - Need to register with Vagrant the artifact created, Run
$ vagrant box add <image.box> --name devops-appserver

Once the vagrant file has been added to this directory we can use it to bring up the environment using
$ vagrant up
This will also mount shread directories with the target
Login with ssh
$ vagrant ssh

###############################
# Launch the app
###############################
Dev environments should have a fork of the application to push to
Use GitHub
Fork the repo on GitHub and clone it down to the Vagrant home directory
$ git clone <URL> <Name>
Cloning the master won't allow you to push changes

cd in to the dev environment
Finish off with the instructions README suing npm and wait for tests to pass
localhost:8080

# e.g
brian@shirka:~/devops/packer-templates/virtualbox$ vagrant box add ubuntu-14.04.5-server-amd64-appserver_virtualbox.box --name devops-appserver

==> box: Box file was not detected as metadata. Adding it directly...
==> box: Adding box 'devops-appserver' (v0) for provider: 
    box: Unpacking necessary files from: file:///home/brian/devops/packer-templates/virtualbox/ubuntu-14.04.5-server-amd64-appserver_virtualbox.box
==> box: Successfully added box 'devops-appserver' (v0) for 'virtualbox'!
#
brian@shirka:~/devops/packer-templates/virtualbox$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Importing base box 'devops-appserver'...
==> default: Matching MAC address for NAT networking...
==> default: Setting the name of the VM: virtualbox_default_1517077573671_4021
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 80 (guest) => 8080 (host) (adapter 1)
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
==> default: Mounting shared folders...
    default: /vagrant => /home/brian/devops/packer-templates/virtualbox
    default: /home/vagrant/devops-kungfu => /home/brian/devops/devops-kungfu
#
brian@shirka:~/devops/packer-templates/virtualbox$ vagrant ssh
Welcome to Ubuntu 14.04.5 LTS (GNU/Linux 4.4.0-31-generic x86_64)

 * Documentation:  https://help.ubuntu.com/
New release '16.04.3 LTS' available.
Run 'do-release-upgrade' to upgrade to it.

vagrant@vagrant:~$

#
brian@shirka:~/devops$ git clone https://github.com/chef/devops-kungfu.git devops-kungfu
Cloning into 'devops-kungfu'...
remote: Counting objects: 1383, done.
remote: Total 1383 (delta 0), reused 0 (delta 0), pack-reused 1382
Receiving objects: 100% (1383/1383), 125.80 MiB | 838.00 KiB/s, done.
Resolving deltas: 100% (681/681), done.
Checking connectivity... done.

#
vagrant@vagrant:~$ cd devops-kungfu

vagrant@vagrant:~/devops-kungfu$ sudo npm install
npm WARN package.json reveal.js@3.0.0 No license field.
. . .

#
vagrant@vagrant:~/devops-kungfu$ grunt -v
Initializing
Command-line options: --verbose

Reading "Gruntfile.js" Gruntfile...OK



###############################
# Access Cloud configuration for the cloud
###############################
You don't need any special access keys when you are building images for use on a local machine with VirtualBox/Vagrant, of course. But when you want to launch a machine on the cloud, you need to make an account and set up access keys for Packer and Vagrant.

Provide information regarding on how to set up a cloud account and enable Packer to use it to build images. We mention the most popular cloud providers that have free trials:

Google Cloud Platform [Easiest to setup and use]
Amazon Web Services [Most practical for long term]
Microsoft Azure. [Who knows]


###############################
# Getting started
###############################

Google Cloud Platform [Easiest to setup and use]
Amazon Web Services [Most practical for long term]
Microsoft Azure. [Who knows]


###############################
# Choose a cloud provider
###############################

